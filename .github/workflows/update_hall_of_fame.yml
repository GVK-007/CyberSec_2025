name: 'Manual Hall of Fame Rebuilder'

on:
  workflow_dispatch:

jobs:
  rebuild-leaderboard:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Scan PRs and Rebuild
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e

          echo "Step 1: Fetching all merged pull requests..."
          # Fetch all PRs, filter by title (case-insensitive), and extract just the author's login.
          # The output will be a simple list of names, e.g., "user1", "user2", "user1"
          gh pr list --state merged --limit 1000 --json author,title \
            | jq -r '.[] | select(.title | test("Level [1-4]"; "i")) | .author.login' \
            > contributors.txt

          echo "Step 2: Counting contributions..."
          # Sort the names and count the unique occurrences.
          # The output will be in the format "count username", e.g., "2 user1", "1 user2"
          sort contributors.txt | uniq -c > counts.txt

          echo "Step 3: Generating the HALL_OF_FAME.md file..."
          # Write the static header to the file
          echo "# 🏆 Hall of Fame 🏆" > HALL_OF_FAME.md
          echo "" >> HALL_OF_FAME.md
          echo "This leaderboard recognizes the amazing contributors to the Cybersecurity event. Every merged pull request from any level earns a spot here. Thank you for your hard work and valuable contributions!" >> HALL_OF_FAME.md
          echo "" >> HALL_OF_FAME.md
          echo "This board is updated automatically by a GitHub Action." >> HALL_OF_FAME.md
          echo "" >> HALL_OF_FAME.md
          echo "| Contributor | Merged Contributions |" >> HALL_OF_FAME.md
          echo "| :--- | :--- |" >> HALL_OF_FAME.md

          # Read the counts file and append the rows to the Hall of Fame
          while read -r line; do
            # The 'line' variable will contain something like "  2 user1"
            # We use awk to format it into the correct markdown table row.
            echo "$line" | awk '{print "| @" $2 " | " $1 " |"}' >> HALL_OF_FAME.md
          done < counts.txt

          echo "✅ Hall of Fame file has been rebuilt locally."
          echo "--- New Hall of Fame Content ---"
          cat HALL_OF_FAME.md
          echo "---------------------------------"

      - name: Commit Updated Hall of Fame
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add HALL_OF_FAME.md
          
          if git diff --staged --quiet; then
            echo "No changes were needed for the Hall of Fame."
          else
            git commit -m "Automated: Rebuilt Hall of Fame from PR history"
            git push
            echo "Successfully committed the updated Hall of Fame."
          fi
